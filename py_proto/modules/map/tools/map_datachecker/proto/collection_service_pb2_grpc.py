# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

import modules.map.tools.map_datachecker.proto.collection_check_message_pb2 as modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2


class CollectionCheckerServiceStub(object):
  """MAP
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ServiceDynamicAlign = channel.unary_unary(
        '/apollo.hdmap.CollectionCheckerService/ServiceDynamicAlign',
        request_serializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.DynamicAlignRequest.SerializeToString,
        response_deserializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.DynamicAlignResponse.FromString,
        )
    self.ServiceStaticAlign = channel.unary_unary(
        '/apollo.hdmap.CollectionCheckerService/ServiceStaticAlign',
        request_serializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.StaticAlignRequest.SerializeToString,
        response_deserializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.StaticAlignResponse.FromString,
        )
    self.ServiceEightRoute = channel.unary_unary(
        '/apollo.hdmap.CollectionCheckerService/ServiceEightRoute',
        request_serializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.EightRouteRequest.SerializeToString,
        response_deserializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.EightRouteResponse.FromString,
        )
    self.ServiceChannelVerify = channel.unary_unary(
        '/apollo.hdmap.CollectionCheckerService/ServiceChannelVerify',
        request_serializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.ChannelVerifyRequest.SerializeToString,
        response_deserializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.ChannelVerifyResponse.FromString,
        )
    self.ServiceLoopsVerify = channel.unary_unary(
        '/apollo.hdmap.CollectionCheckerService/ServiceLoopsVerify',
        request_serializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.LoopsVerifyRequest.SerializeToString,
        response_deserializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.LoopsVerifyResponse.FromString,
        )


class CollectionCheckerServiceServicer(object):
  """MAP
  """

  def ServiceDynamicAlign(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ServiceStaticAlign(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ServiceEightRoute(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ServiceChannelVerify(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ServiceLoopsVerify(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CollectionCheckerServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ServiceDynamicAlign': grpc.unary_unary_rpc_method_handler(
          servicer.ServiceDynamicAlign,
          request_deserializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.DynamicAlignRequest.FromString,
          response_serializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.DynamicAlignResponse.SerializeToString,
      ),
      'ServiceStaticAlign': grpc.unary_unary_rpc_method_handler(
          servicer.ServiceStaticAlign,
          request_deserializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.StaticAlignRequest.FromString,
          response_serializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.StaticAlignResponse.SerializeToString,
      ),
      'ServiceEightRoute': grpc.unary_unary_rpc_method_handler(
          servicer.ServiceEightRoute,
          request_deserializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.EightRouteRequest.FromString,
          response_serializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.EightRouteResponse.SerializeToString,
      ),
      'ServiceChannelVerify': grpc.unary_unary_rpc_method_handler(
          servicer.ServiceChannelVerify,
          request_deserializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.ChannelVerifyRequest.FromString,
          response_serializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.ChannelVerifyResponse.SerializeToString,
      ),
      'ServiceLoopsVerify': grpc.unary_unary_rpc_method_handler(
          servicer.ServiceLoopsVerify,
          request_deserializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.LoopsVerifyRequest.FromString,
          response_serializer=modules_dot_map_dot_tools_dot_map__datachecker_dot_proto_dot_collection__check__message__pb2.LoopsVerifyResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'apollo.hdmap.CollectionCheckerService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
