# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: modules/routing/proto/routing_config.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='modules/routing/proto/routing_config.proto',
  package='apollo.routing',
  syntax='proto2',
  serialized_pb=_b('\n*modules/routing/proto/routing_config.proto\x12\x0e\x61pollo.routing\"\xa7\x01\n\rRoutingConfig\x12\x12\n\nbase_speed\x18\x01 \x01(\x01\x12\x19\n\x11left_turn_penalty\x18\x02 \x01(\x01\x12\x1a\n\x12right_turn_penalty\x18\x03 \x01(\x01\x12\x15\n\ruturn_penalty\x18\x04 \x01(\x01\x12\x16\n\x0e\x63hange_penalty\x18\x05 \x01(\x01\x12\x1c\n\x14\x62\x61se_changing_length\x18\x06 \x01(\x01')
)




_ROUTINGCONFIG = _descriptor.Descriptor(
  name='RoutingConfig',
  full_name='apollo.routing.RoutingConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='base_speed', full_name='apollo.routing.RoutingConfig.base_speed', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='left_turn_penalty', full_name='apollo.routing.RoutingConfig.left_turn_penalty', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='right_turn_penalty', full_name='apollo.routing.RoutingConfig.right_turn_penalty', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uturn_penalty', full_name='apollo.routing.RoutingConfig.uturn_penalty', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='change_penalty', full_name='apollo.routing.RoutingConfig.change_penalty', index=4,
      number=5, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='base_changing_length', full_name='apollo.routing.RoutingConfig.base_changing_length', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=63,
  serialized_end=230,
)

DESCRIPTOR.message_types_by_name['RoutingConfig'] = _ROUTINGCONFIG
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

RoutingConfig = _reflection.GeneratedProtocolMessageType('RoutingConfig', (_message.Message,), dict(
  DESCRIPTOR = _ROUTINGCONFIG,
  __module__ = 'modules.routing.proto.routing_config_pb2'
  # @@protoc_insertion_point(class_scope:apollo.routing.RoutingConfig)
  ))
_sym_db.RegisterMessage(RoutingConfig)


# @@protoc_insertion_point(module_scope)
